{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { FormArrayName } from '@angular/forms';\nimport { FormValidationContainer } from './form-validation-container';\nimport { MESSAGES_PROVIDER } from './injection-tokens';\nimport { VALIDATION_ERROR_CONFIG } from './error-validation-config';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"ngxValidationErrorsArray\", \"\"];\nconst _c1 = [\"*\"];\nlet FormArrayContainerComponent = /*#__PURE__*/(() => {\n  class FormArrayContainerComponent extends FormValidationContainer {\n    _elRef;\n    _renderer;\n    _messageProvider;\n    _cdRef;\n    _validationErrorsConfig;\n    // tslint:disable-next-line:variable-name\n    _formControl;\n    // tslint:disable-next-line:variable-name\n    _el;\n    constructor(\n    // tslint:disable-next-line:variable-name\n    _elRef,\n    // tslint:disable-next-line:variable-name\n    _renderer,\n    // tslint:disable-next-line:variable-name\n    _messageProvider,\n    // tslint:disable-next-line:variable-name\n    _cdRef,\n    // tslint:disable-next-line:variable-name\n    //private _componentFactoryResolver: ComponentFactoryResolver,\n    // tslint:disable-next-line:variable-name\n    _validationErrorsConfig) {\n      //super(_elRef, _renderer, _messageProvider, _cdRef, _componentFactoryResolver, _validationErrorsConfig);\n      super(_elRef, _renderer, _messageProvider, _cdRef, _validationErrorsConfig);\n      this._elRef = _elRef;\n      this._renderer = _renderer;\n      this._messageProvider = _messageProvider;\n      this._cdRef = _cdRef;\n      this._validationErrorsConfig = _validationErrorsConfig;\n    }\n    get formControl() {\n      return this._formControl.control;\n    }\n    get formControlName() {\n      return this._formControl.name;\n    }\n    get statusChanges() {\n      return this._formControl.control.statusChanges;\n    }\n    get el() {\n      return this._el;\n    }\n    static ɵfac = function FormArrayContainerComponent_Factory(t) {\n      return new (t || FormArrayContainerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(MESSAGES_PROVIDER, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(VALIDATION_ERROR_CONFIG));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FormArrayContainerComponent,\n      selectors: [[\"\", \"ngxValidationErrorsArray\", \"\"], [\"ngx-validation-errors-array\"], [\"\", \"formArrayContainer\", \"\"], [\"form-array-container\"]],\n      contentQueries: function FormArrayContainerComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, FormArrayName, 7);\n          i0.ɵɵcontentQuery(dirIndex, FormArrayName, 7, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._formControl = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._el = _t.first);\n        }\n      },\n      features: [i0.ɵɵInheritDefinitionFeature],\n      attrs: _c0,\n      ngContentSelectors: _c1,\n      decls: 3,\n      vars: 0,\n      consts: [[\"errorsContainer\", \"\"]],\n      template: function FormArrayContainerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n          i0.ɵɵelementContainer(1, null, 0);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return FormArrayContainerComponent;\n})();\nexport { FormArrayContainerComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}