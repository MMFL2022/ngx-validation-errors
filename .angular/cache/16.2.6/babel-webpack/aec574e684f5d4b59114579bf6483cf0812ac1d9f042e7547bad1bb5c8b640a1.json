{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ValidationContextComponent } from 'projects/xtream/ngx-validation-errors/src/public-api';\n// import {ValidationContextComponent} from '@xtream/ngx-validation-errors';\nimport { distinctUntilChanged, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../../projects/xtream/ngx-validation-errors/src/lib/form-field-container.component\";\nimport * as i4 from \"../../../../projects/xtream/ngx-validation-errors/src/lib/form-array-container.component\";\nimport * as i5 from \"../../../../projects/xtream/ngx-validation-errors/src/lib/validation-context.component\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../shared/form-submit.directive\";\nconst _c0 = [\"firstForm\"];\nfunction LazyFormComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 18);\n    i0.ɵɵelementStart(2, \"label\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"check_\", i_r3, \"\");\n    i0.ɵɵproperty(\"formControlName\", i_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"check_\", i_r3, \"\")(\"id\", \"label_check_\", i_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.boxesInfo[i_r3]);\n  }\n}\nfunction minCheckSelected(size) {\n  return control => {\n    const values = control.value;\n    const selected = values.filter(v => !!v).length;\n    if (selected < size) {\n      return {\n        checkBoxes: true\n      };\n    }\n    return null;\n  };\n}\nlet LazyFormComponent = /*#__PURE__*/(() => {\n  class LazyFormComponent {\n    translateService;\n    validationContext;\n    heroForm;\n    boxesInfo = ['a', 'b', 'c', 'd'];\n    constructor(translateService) {\n      this.translateService = translateService;\n      this.heroForm = new FormGroup({\n        name: new FormControl(null, [Validators.required, Validators.minLength(4)]),\n        surname: new FormControl({\n          value: null,\n          disabled: true\n        }, [Validators.required, Validators.maxLength(1000)]),\n        checkBoxes: new FormArray(this.boxesInfo.map(a => new FormControl()), [minCheckSelected(1)])\n      });\n      this.heroForm.valueChanges.pipe(distinctUntilChanged(), tap(v => {\n        console.debug('v', v);\n        if (v.name) {\n          this.heroForm.controls['surname'].enable({\n            emitEvent: false\n          });\n        } else {\n          this.heroForm.controls['surname'].disable({\n            emitEvent: false\n          });\n        }\n      })).subscribe();\n    }\n    ngOnInit() {\n      this.translateService.setDefaultLang('en');\n      this.translateService.use('en');\n    }\n    clearForm() {\n      console.debug('this.validationContext', this.validationContext);\n      this.validationContext.clear();\n    }\n    chooseLanguage(lan) {\n      this.translateService.use(lan);\n    }\n    static ɵfac = function LazyFormComponent_Factory(t) {\n      return new (t || LazyFormComponent)(i0.ɵɵdirectiveInject(i1.TranslateService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LazyFormComponent,\n      selectors: [[\"app-lazy-form\"]],\n      viewQuery: function LazyFormComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7, ValidationContextComponent);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.validationContext = _t.first);\n        }\n      },\n      decls: 37,\n      vars: 5,\n      consts: [[2, \"width\", \"40%\", \"text-align\", \"center\", \"margin\", \"auto\"], [\"src\", \"assets/images/logo-blu.svg\"], [2, \"text-align\", \"center\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"validationContext\", \"NEW_HERO\", \"innerValidationError\", \"true\", 3, \"formGroup\", \"appFormSubmit\"], [\"firstForm\", \"\"], [\"ngxValidationErrorsField\", \"\", 1, \"input-wrapper\", \"form-group\"], [\"formControlName\", \"name\", 1, \"form-control\"], [\"formControlName\", \"surname\", 1, \"form-control\"], [\"ngxValidationErrorsArray\", \"\"], [\"formArrayName\", \"checkBoxes\", 1, \"form-group\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"15px\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"validationContext\", \"USER.REGISTRATION\", 3, \"formGroup\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"checkbox\", 3, \"id\", \"formControlName\"], [3, \"for\", \"id\"]],\n      template: function LazyFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"img\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"xtream validation errors lazy\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function LazyFormComponent_Template_button_click_5_listener() {\n            return ctx.chooseLanguage(\"en\");\n          });\n          i0.ɵɵtext(6, \"en\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function LazyFormComponent_Template_button_click_7_listener() {\n            return ctx.chooseLanguage(\"it\");\n          });\n          i0.ɵɵtext(8, \"it\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"form\", 6, 7)(11, \"div\", 8)(12, \"label\");\n          i0.ɵɵtext(13, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 8)(16, \"label\");\n          i0.ɵɵtext(17, \"Surmane\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 11)(20, \"div\", 12);\n          i0.ɵɵtemplate(21, LazyFormComponent_div_21_Template, 4, 5, \"div\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"button\", 14);\n          i0.ɵɵtext(23, \"Submit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function LazyFormComponent_Template_button_click_24_listener() {\n            return ctx.clearForm();\n          });\n          i0.ɵɵtext(25, \"Clear\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"form\", 16)(27, \"div\", 8)(28, \"label\");\n          i0.ɵɵtext(29, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(30, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"div\", 8)(32, \"label\");\n          i0.ɵɵtext(33, \"Surmane\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(34, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"button\", 17);\n          i0.ɵɵtext(36, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.heroForm)(\"appFormSubmit\", ctx.heroForm);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngForOf\", ctx.boxesInfo);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.heroForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", ctx.heroForm.invalid);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormArrayName, i3.FormFieldContainerComponent, i4.FormArrayContainerComponent, i5.ValidationContextComponent, i6.NgForOf, i7.FormSubmitDirective],\n      styles: [\".input-wrapper[_ngcontent-%COMP%]{position:relative;padding-bottom:20px}form[_ngcontent-%COMP%]{width:50%;margin:auto}\"]\n    });\n  }\n  return LazyFormComponent;\n})();\nexport { LazyFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}